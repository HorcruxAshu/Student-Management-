
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DM
 */
public class Register extends javax.swing.JFrame {
            File f = new File("C:\\Netbeans Project");
       
            String Name, Username, Password, Confirm, Class;

            int ln;
    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
    }
    
    
    void createfolder(){
        if(!f.exists()){
            f.mkdirs();
        }
    }

    void readFile(){
           try {
               FileReader fr = new FileReader(f + "\\data.txt");
               System.out.println("File exists!");
           } catch (FileNotFoundException ex) {
               try {
                   FileWriter fw = new FileWriter(f + "\\data.txt");
                   System.out.println("File Created");
               } catch (IOException ex1) {
                   Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex1);
               }
           }
        
    }
    boolean validate(String name, String usr, String psword, String cpass, String course){
        if(name.trim().isEmpty() || usr.trim().isEmpty() || psword.trim().isEmpty() || cpass.trim().isEmpty() || course.trim().isEmpty()){
            return true;
        }
        return false;
        
    }
    void addData(String name, String usr, String psword, String cpass, String course){
           try {
               RandomAccessFile raf = new RandomAccessFile(f + "\\data.txt", "rw");
               for(int i = 0; i < ln; i++){
                   raf.readLine();
               }
               
               raf.writeBytes( name + ", " );
               raf.writeBytes(usr + ", " );
               raf.writeBytes(psword  + ", " );
//               raf.writeBytes("ConfirmPass:" + cpass  + ", " );
               raf.writeBytes( course);
               raf.writeBytes("\r\n");
               
               
               
               
           } catch (FileNotFoundException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           }
    }
//    void checkPass(String pass, String cpass){
//       
//        
//        
//    }
    void countLines(){
           try {
               ln = 1;
               RandomAccessFile raf = new RandomAccessFile(f + "\\data.txt", "rw");
               for(int i = 0; raf.readLine()!= null; i++){
                   ln++;
               }
               System.out.println("Number of lines: " + ln);
           
           } catch (FileNotFoundException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           }
        
    }
    void logic(String usr, String psword){
           try {
               RandomAccessFile raf = new RandomAccessFile(f + "\\data.txt", "rw");
               for(int i = 0; i < ln; i+=4){
                   System.out.println("count " + i);
                   raf.readLine();
                   raf.readLine();
                   String forPass = raf.readLine().substring(9);
                   String forCPass = raf.readLine().substring(9);
                   
                   if(usr.equals(forPass) & psword.equals(forCPass)){
                       JOptionPane.showMessageDialog(null, "Registered");
                       break;
                   }else if(i == (ln - 4)){
                       JOptionPane.showMessageDialog(null, "Passwords don't match");
                   }
                   
                   for(int k = 1; k <= 2; k++ ){
                       raf.readLine();
                   }
               }
               
               
           } catch (FileNotFoundException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IOException ex) {
               Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jMenuItem1 = new javax.swing.JMenuItem();
        jColorChooser1 = new javax.swing.JColorChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Names = new javax.swing.JTextField();
        Usernames = new javax.swing.JTextField();
        Passwords = new javax.swing.JTextField();
        CPasswords = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        BackL = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        jLabel6.setText("jLabel6");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Register");

        jLabel2.setText("Username*");

        jLabel3.setText("Name*");

        jLabel4.setText("Password*");

        jLabel5.setText("Confirm Password*");

        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Names.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamesActionPerformed(evt);
            }
        });

        Usernames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernamesActionPerformed(evt);
            }
        });

        Passwords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordsActionPerformed(evt);
            }
        });

        CPasswords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPasswordsActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Class", "11A", "11B", "12A", "12B" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Class");

        BackL.setText("Back");
        BackL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(jButton1)
                                .addGap(40, 40, 40)
                                .addComponent(jButton2)
                                .addGap(37, 37, 37)
                                .addComponent(BackL))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CPasswords, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Passwords, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Usernames, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Names, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Names, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Usernames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Passwords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CPasswords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(BackL))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            createfolder();
            readFile();
            countLines();
            
            if(validate(Names.getText(),Usernames.getText(), Passwords.getText(), CPasswords.getText(), jComboBox1.getSelectedItem().toString())){
                if(Names.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill Name!");
                }else if(Usernames.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill Username!");
                }else if(Passwords.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please fill Password!");
                }else if(CPasswords.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Please confirm your password!");
                }else {
                    JOptionPane.showMessageDialog(null, "Please fill all fields correctly!");
                }
                
                
                
                
            }else if(!validate(Names.getText(),Usernames.getText(), Passwords.getText(), CPasswords.getText(), jComboBox1.getSelectedItem().toString())){           
                if(!"Select Class".equals(jComboBox1.getSelectedItem().toString())){
                    if(Passwords.getText().equals(CPasswords.getText())){
                        addData(Names.getText(),Usernames.getText(), Passwords.getText(), CPasswords.getText(), jComboBox1.getSelectedItem().toString());
                        login r1 = new login();
                        r1.setVisible(true);
                        this.dispose();
                    }else{
                        JOptionPane.showMessageDialog(null, "Passwords don't match");
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Please select class!");
                }
                
            }
            
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String s = jComboBox1.getSelectedItem().toString();
        
        
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void NamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamesActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_NamesActionPerformed

    private void CPasswordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPasswordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CPasswordsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        CPasswords.setText("");
        Names.setText("");
        Usernames.setText("");
        Passwords.setText("");
//        jComboBox1.setSelectedItem("Class");
       
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void UsernamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernamesActionPerformed

    private void PasswordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordsActionPerformed

    private void BackLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackLActionPerformed
        // TODO add your handling code here:
        login lgn = new login();
        lgn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackLActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackL;
    private javax.swing.JTextField CPasswords;
    private javax.swing.JTextField Names;
    private javax.swing.JTextField Passwords;
    private javax.swing.JTextField Usernames;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
